{"version":3,"sources":["components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","variables/general.jsx","views/TableList/TableList.jsx","routes/dashboard.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","routes/index.jsx","index.js"],"names":["ps","Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","server","stellar","Server","createData","array","res","forEach","bnk","name","sort","b","nameA","toUpperCase","nameB","getStellar","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee2","loop","data","wrap","_context2","prev","next","arrayP","map","_ref2","_callee","_context","accounts","accountId","publicKey","call","sent","abrupt","String","parseInt","balances","balance","stop","_x","_x2","apply","arguments","Promise","all","createChart","canvas","options","legend","display","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","color","xAxes","barPercentage","padding","Dashboard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","timer","queryData","_callee3","labels","vote","chart","_context3","datasets","borderColor","backgroundColor","pointRadius","pointHoverRadius","borderWidth","setState","state","intervalId","setInterval","clearInterval","reactstrap_es","xs","react_chartjs_2_es","width","height","components_Stats_Stats","thead","head","dashRoutes","path","icon","component","RegularTables","tag","responsive","prop","redirect","pathTo","Header","isOpen","dropdownOpen","toggle","bind","assertThisInitialized","dropdownToggle","e","_this2","dashboardRoutes","collapse","views","location","pathname","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","addEventListener","updateColor","history","indexOf","_this3","expand","fluid","type","ref","onClick","openSidebar","href","getBrand","navbar","placeholder","addonType","Link","to","nav","caret","right","Footer","default","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","routes","pro","NavLink","activeClassName","indexRoutes","handleActiveClick","handleBgClick","mainPanel","body","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","assign","components_Header_Header","Switch","Redirect","from","Route","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","render","Router","getElementById"],"mappings":"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","file":"static/js/main.cbba36f4.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// import logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"https://bnk48voting.herokuapp.com\"\n            className=\"simple-text logo-normal\"\n          >\n            BNK48 Voting\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n              return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n// <FixedPlugin\n//   bgColor={this.state.backgroundColor}\n//   activeColor={this.state.activeColor}\n//   handleActiveClick={this.handleActiveClick}\n//   handleBgClick={this.handleBgClick}\n// />\nexport default Dashboard;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport {HorizontalBar} from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\nimport arrayP from \"module/member_keys.json\";\nimport stellar from 'stellar-sdk';\n\nconst server = new stellar.Server('https://horizon-testnet.stellar.org');\nconst createData=(array)=> {\n  const res=[];\n  array.forEach((bnk)=>{\n    let name = bnk.name;\n    res.push([\n      name,\n      '0'\n    ]);\n    res.sort(function(a, b) {//sort name\n      var nameA = a[0].toUpperCase(); // ignore upper and lowercase\n      var nameB = b[0].toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n    res.sort(function(a, b) {//sort vote\n      return b[1] - a[1];\n    });\n  });\n  return res;\n}\n\nconst getStellar= async ()=>{\n  const loop = arrayP.map(async (bnk,key)=>{\n    let name = bnk.name;\n    const res = await server.accounts()\n    .accountId(bnk.publicKey)\n    .call()\n    return ([name,String(parseInt(res.balances[0].balance))]);\n  })\n  const data = await Promise.all(loop)\n  data.sort(function(a, b) {//sort name\n    var nameA = a[0].toUpperCase(); // ignore upper and lowercase\n    var nameB = b[0].toUpperCase(); // ignore upper and lowercase\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    return 0;\n  });\n  data.sort(function(a, b) {//sort vote\n    return b[1] - a[1];\n  });\n  return data;\n}\n\nconst createChart = (data)=>{\n  return ({\n    data: canvas => {\n      return data;\n    },\n    options: {\n      legend: {\n        display: false\n      },\n\n      tooltips: {\n        enabled: true\n      },\n\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              fontColor: \"#9f9f9f\",\n              beginAtZero: false,\n              maxTicksLimit: 5\n              // padding: 20\n            },\n            gridLines: {\n              drawBorder: false,\n              zeroLineColor: \"#ccc\",\n              color: \"rgba(255,255,255,0.05)\"\n            }\n          }\n        ],\n\n        xAxes: [\n          {\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(255,255,255,0.1)\",\n              zeroLineColor: \"transparent\",\n              display: false\n            },\n            ticks: {\n              beginAtZero:true,\n              padding: 20,\n              fontColor: \"#9f9f9f\"\n            }\n          }\n        ]\n      }\n    }\n  });\n}\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let data = createData(arrayP);\n    let labels = data.map((bnk,key)=>{\n      return (bnk[0]);\n    });\n    let vote = data.map((bnk,key)=>{\n      return (bnk[1]);\n    });\n    let chart = {\n      labels: labels,\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: vote\n        }\n      ]\n    };\n    this.state = {\n      chart:createChart(chart)\n    }\n  }\n  componentDidMount() {\n    this.queryData();\n    var intervalId =  setInterval(this.timer, 20000);\n    this.setState({ intervalId: intervalId });\n }\n timer = () => {\n   this.queryData();\n };\n\n componentWillUnmount() {\n   clearInterval(this.state.intervalId);\n }\n\n queryData = async() => {\n   let data = await getStellar(); // createData(arrayP);\n   let labels = data.map((bnk,key)=>{\n     return (bnk[0]);\n   });\n   let vote = data.map((bnk,key)=>{\n     return (bnk[1]);\n   });\n   let chart = {\n     labels: labels,\n     datasets: [\n       {\n         borderColor: \"#6bd098\",\n         backgroundColor: \"#6bd098\",\n         pointRadius: 0,\n         pointHoverRadius: 0,\n         borderWidth: 3,\n         data: vote\n       }\n     ]\n   };\n   // console.log(chart.labels);\n   // console.log(chart.datasets[0].data);\n   this.setState({ chart: createChart(chart) });\n };\n\n  render() {\n    const chart = this.state.chart;\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>BNK48 Voting Chart</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <HorizontalBar\n                  data={chart.data}\n                  options={chart.options}\n                  width={400}\n                  height={400}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 0 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","// ##############################\n// // // table head data and table body data for Tables view\n// #############################\n\nconst thead = [\"Name\", \"Country\", \"City\", \"Salary\"];\nconst tbody = [\n  {\n    className: \"table-success\",\n    data: [\"Dakota Rice\", \"Niger\", \"Oud-Turnhout\", \"$36,738\"]\n  },\n  {\n    className: \"\",\n    data: [\"Minerva Hooper\", \"Curaçao\", \"Sinaai-Waas\", \"$23,789\"]\n  },\n  {\n    className: \"table-info\",\n    data: [\"Sage Rodriguez\", \"Netherlands\", \"Baileux\", \"$56,142\"]\n  },\n  {\n    className: \"\",\n    data: [\"Philip Chaney\", \"Korea, South\", \"Overland Park\", \"$38,735\"]\n  },\n  {\n    className: \"table-danger\",\n    data: [\"Doris Greene\", \"Malawi\", \"Feldkirchen in Kärnten\", \"$63,542\"]\n  },\n  { className: \"\", data: [\"Mason Porter\", \"Chile\", \"Gloucester\", \"$78,615\"] },\n  {\n    className: \"table-warning\",\n    data: [\"Jon Porter\", \"Portugal\", \"Gloucester\", \"$98,615\"]\n  }\n];\n\n// data for <thead> of table in TableList view\n// data for <tbody> of table in TableList view\nexport { thead, tbody };\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport arrayP from \"module/member_keys.json\";\nimport { thead, tbody } from \"variables/general\";\n// import stellar from 'stellar-sdk';\n\n// const server = new stellar.Server('https://horizon-testnet.stellar.org');\nconst head = [\"Name\", \"PublicKey\"];\n\nconst createData=(array)=> {\n  const res=[];\n  array.forEach((bnk)=>{\n    let name = bnk.name;\n    let publicKey = bnk.publicKey;\n    res.push([\n      name,\n      publicKey\n    ]);\n    // data.push([name,String(res.balances[0].balance),publicKey]);\n    res.sort(function(a, b) {//sort name\n      var nameA = a[0].toUpperCase(); // ignore upper and lowercase\n      var nameB = b[0].toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n    // res.sort(function(a, b) {//sort vote\n    //   return a[1] - b[1];\n    // });\n  });\n  return res;\n}\n\n// const getStellar= async ()=>{\n//   // const data=[];\n//   // for (const bnk of arrayP) {\n//   //   let name = bnk.name;\n//   //   let publicKey = bnk.publicKey;\n//   //   let vote = '1';\n//   //   // let temp = [];\n//   //   const res = await server.accounts()\n//   //   .accountId(bnk.publicKey)\n//   //   .call()\n//   //   data.push([name,String(parseInt(res.balances[0].balance)),publicKey]);\n//   // }\n//   const loop = arrayP.map(async (bnk,key)=>{\n//     // console.log(bnk);\n//     let name = bnk.name;\n//     let publicKey = bnk.publicKey;\n//     // let vote = '1';\n//     // let temp = [];\n//     const res = await server.accounts()\n//     .accountId(bnk.publicKey)\n//     .call()\n//     return ([name,String(parseInt(res.balances[0].balance)),publicKey]);\n//     // data.push([name,String(parseInt(res.balances[0].balance)),publicKey]);\n//   })\n//   const data = await Promise.all(loop)\n//   // console.log(data);\n//\n//   data.sort(function(a, b) {//sort name\n//     var nameA = a[0].toUpperCase(); // ignore upper and lowercase\n//     var nameB = b[0].toUpperCase(); // ignore upper and lowercase\n//     if (nameA < nameB) {\n//       return -1;\n//     }\n//     if (nameA > nameB) {\n//       return 1;\n//     }\n//     return 0;\n//   });\n//   // data.sort(function(a, b) {//sort vote\n//   //   return a[1] - b[1];\n//   // });\n//   // return data;\n// }\n\nclass RegularTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data:createData(arrayP)\n    }\n  }\n  //\n  // queryData = async() => {\n  //   let data = await getStellar();\n  //   this.setState({data:data});\n  // };\n\n  //  componentDidMount() {\n  //   // this.queryData();\n  //   // var intervalId =  setInterval(this.timer, 30000);\n  //   // this.setState({ intervalId: intervalId });\n  // }\n  //\n  // componentWillUnmount() {\n  //   // clearInterval(this.state.intervalId);\n  // }\n\n  timer = () => {\n    this.queryData();\n  };\n\n  render() {\n    const data = this.state.data;\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card className=\"card-plain\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">Vote Table</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      {head.map((prop, key) => {\n                        if (key === head.length - 1)\n                          return (\n                            <th key={key} className=\"text-center\">\n                              {prop}\n                            </th>\n                          );\n                        return <th key={key}>{prop}</th>;\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.map((prop, key) => {\n                      return (\n                        <tr key={key}>\n                          {prop.map((prop, key) => {\n                            if (key === thead.length - 1)\n                              return (\n                                <td key={key} className=\"text-right\">\n                                  {prop}\n                                </td>\n                              );\n                            return <td key={key}>{prop}</td>;\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default RegularTables;\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\n// import Notifications from \"views/Notifications/Notifications.jsx\";\n// import Icons from \"views/Icons/Icons.jsx\";\n// import Typography from \"views/Typography/Typography.jsx\";\nimport TableList from \"views/TableList/TableList.jsx\";\n// import Maps from \"views/Maps/Maps.jsx\";\n// import UserPage from \"views/UserPage/UserPage.jsx\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"nc-icon nc-diamond\",\n  //   component: Icons\n  // },\n  // { path: \"/maps\", name: \"Maps\", icon: \"nc-icon nc-pin-3\", component: Maps },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"nc-icon nc-bell-55\",\n  //   component: Notifications\n  // },\n  // {\n  //   path: \"/user-page\",\n  //   name: \"User Profile\",\n  //   icon: \"nc-icon nc-single-02\",\n  //   component: UserPage\n  // },\n  {\n    path: \"/tables\",\n    name: \"Table List\",\n    icon: \"nc-icon nc-tile-56\",\n    component: TableList\n  },\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"nc-icon nc-caps-small\",\n  //   component: Typography\n  // },\n  // {\n  //   pro: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"nc-icon nc-spaceship\"\n  // },\n  { redirect: true, path: \"/\", pathTo: \"/dashboard\", name: \"Dashboard\" }\n];\nexport default dashRoutes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form>\n            <Nav navbar>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-magnify\">\n                  <i className=\"nc-icon nc-layout-11\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\n                  </p>\n                </Link>\n              </NavItem>\n              <Dropdown\n                nav\n                isOpen={this.state.dropdownOpen}\n                toggle={e => this.dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-bell-55\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\n                  <i className=\"nc-icon nc-settings-gear-65\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n            </nav>\n            <div className=\"credits ml-auto\">\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\n\nvar indexRoutes = [{ path: \"/\", name: \"Home\", component: Dashboard }];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\n\nimport indexRoutes from \"routes/index.jsx\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />;\n      })}\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}